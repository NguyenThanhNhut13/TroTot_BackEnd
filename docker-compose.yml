services:
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./config-server/src/main/resources/configurations:/etc/secrets:ro
    networks:
      - trotot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  discovery:
    build:
      context: ./discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - trotot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8222:8222"
    depends_on:
      discovery:
        condition: service_healthy
    networks:
      - trotot-network

  address-service:
    build:
      context: ./address-service
      dockerfile: Dockerfile
    depends_on:
      discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - trotot-network

  # notification-service:
  #   build:
  #     context: ./notification-service
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./notification-service/config:/app/config
  #   depends_on:
  #     discovery:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #   networks:
  #     - trotot-network

  # user-service:
  #   build:
  #     context: ./user-service
  #     dockerfile: Dockerfile
  #   depends_on:
  #     discovery:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #   networks:
  #     - trotot-network

  room-service:
    build:
      context: ./room-service
      dockerfile: Dockerfile
    depends_on:
      discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
      address-service:
        condition: service_started
    networks:
      - trotot-network

  # auth-service:
  #   build:
  #     context: ./auth-service
  #     dockerfile: Dockerfile
  #   depends_on:
  #     discovery:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #     notification-service:
  #       condition: service_started
  #     user-service:
  #       condition: service_started
  #   networks:
  #     - trotot-network

  # media-service:
  #   build:
  #     context: ./media-service
  #     dockerfile: Dockerfile
  #   depends_on:
  #     discovery:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #   networks:
  #     - trotot-network

  # payment-service:
  #   build:
  #     context: ./payment-service
  #     dockerfile: Dockerfile
  #   depends_on:
  #     discovery:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #   networks:
  #     - trotot-network

  # review-service:
  #   build:
  #     context: ./review-service
  #     dockerfile: Dockerfile
  #   depends_on:
  #     discovery:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #   networks:
  #     - trotot-network

  # report-service:
  #   build:
  #     context: ./report-service
  #     dockerfile: Dockerfile
  #   depends_on:
  #     discovery:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #   networks:
  #     - trotot-network

  # recommendation-service:
  #   build:
  #     context: ./recommendation-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ./recommendation-service/models:/app/models
  #   depends_on:
  #     discovery:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #     room-service:
  #       condition: service_started
  #     user-service:
  #       condition: service_started
  #   networks:
  #     - trotot-network

networks:
  trotot-network:
    driver: bridge
